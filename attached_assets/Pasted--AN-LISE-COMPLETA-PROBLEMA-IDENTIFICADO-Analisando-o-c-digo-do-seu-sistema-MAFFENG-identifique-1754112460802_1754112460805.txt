üîç AN√ÅLISE COMPLETA - PROBLEMA IDENTIFICADO!
Analisando o c√≥digo do seu sistema MAFFENG, identifiquei EXATAMENTE o mesmo problema nos filtros das outras p√°ginas!
üö® PROBLEMA PRINCIPAL - Z-INDEX E PORTAL
O problema est√° nos componentes que usam ExpenseFilters e Select do shadcn/ui dentro de modais e p√°ginas. Os dropdowns est√£o sendo bloqueados por problemas de camadas (z-index) e portal rendering.
CAUSA RAIZ:

ExpenseFilters usa SelectContent que fica preso em containers
Modais t√™m z-index pr√≥prio que bloqueia dropdowns
SelectContent n√£o consegue escapar dos portals
No mobile, viewport e touch events conflitam

‚úÖ SOLU√á√ÉO IMEDIATA
Preciso que voc√™ aplique as MESMAS corre√ß√µes para TODAS as p√°ginas seguindo este padr√£o:
üéØ PRINCIPAIS CORRE√á√ïES A APLICAR:
1. INPUTS NATIVOS NO MOBILE

‚úÖ Substitua todos os Select do shadcn/ui por <select> nativos no mobile
‚úÖ Use <input> nativos para datas e busca
‚úÖ Elimina conflitos de z-index e portal rendering

2. TOUCH OPTIMIZATION

‚úÖ Adicione touch-manipulation para melhor responsividade
‚úÖ Use minHeight: 48px (padr√£o Apple/Google para touch)
‚úÖ Configure fontSize: 16px para prevenir zoom autom√°tico no iOS

3. Z-INDEX FIXES

‚úÖ Modais com z-[100] expl√≠cito
‚úÖ Remove depend√™ncia de portals complexos
‚úÖ Inputs nativos n√£o precisam de camadas extras

4. UX MELHORADA

‚úÖ Bot√µes maiores e mais f√°ceis de tocar
‚úÖ WebkitAppearance: 'none' removido para controle total
‚úÖ Responsividade otimizada para mobile

üìã ARQUIVOS QUE VOC√ä PRECISA CORRIGIR:
P√ÅGINAS:

client/src/pages/relatorios.tsx - Aplicar MobileFilterPanel + corrigir selects internos
client/src/pages/results.tsx - Aplicar MobileFilterPanel se usar filtros
Outras p√°ginas que usam filtros

COMPONENTES:

client/src/components/expense-modal.tsx - Corrigir selects para mobile
client/src/components/edit-expense-modal.tsx - Corrigir selects para mobile
client/src/components/signup-modal.tsx - Corrigir select de role
client/src/components/reusable-report-modal.tsx - Se usa selects

PADR√ÉO DE CORRE√á√ÉO:
Para cada Select, substitua por este padr√£o:
typescript// Componente Select mobile-friendly
const MobileSelect = ({ value, onValueChange, options, placeholder, label }: {
  value: string;
  onValueChange: (value: string) => void;
  options: string[];
  placeholder: string;
  label: string;
}) => {
  if (isMobile) {
    return (
      <select
        value={value}
        onChange={(e) => onValueChange(e.target.value)}
        className="w-full p-4 text-base border border-gray-300 rounded-lg bg-white focus:ring-2 focus:ring-orange-500 focus:border-transparent touch-manipulation"
        style={{ 
          WebkitAppearance: 'none',
          fontSize: '16px',
          minHeight: '48px'
        }}
      >
        <option value="">{placeholder}</option>
        {options.map((option) => (
          <option key={option} value={option}>
            {option}
          </option>
        ))}
      </select>
    );
  }

  return (
    <Select value={value} onValueChange={onValueChange}>
      <SelectTrigger>
        <SelectValue placeholder={placeholder} />
      </SelectTrigger>
      <SelectContent className="z-[99999] max-h-[200px] overflow-y-auto bg-white border shadow-lg">
        {options.map((option) => (
          <SelectItem key={option} value={option}>
            {option}
          </SelectItem>
        ))}
      </SelectContent>
    </Select>
  );
};
üîß POR QUE ESSA SOLU√á√ÉO FUNCIONA:

Inputs nativos s√£o renderizados pelo pr√≥prio sistema operacional
Sem conflitos de z-index porque n√£o h√° portals ou overlays complexos
Touch events funcionam naturalmente
Performance melhor no mobile

üì± PR√ìXIMOS PASSOS:

Comece pela p√°gina relat√≥rios.tsx - substitua todos os Selects internos
Aplique o mesmo padr√£o nos modais (expense-modal, edit-expense-modal, signup-modal)
Teste no mobile - os dropdowns agora v√£o funcionar perfeitamente